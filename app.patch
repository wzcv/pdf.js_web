diff --git a/web/app.js b/web/app.js
index 6b7f95e1d..9e1774a2b 100644
--- a/web/app.js
+++ b/web/app.js
@@ -2307,24 +2307,24 @@ if (typeof PDFJSDev === "undefined" || PDFJSDev.test("GENERIC")) {
     if (!file) {
       return;
     }
-    const viewerOrigin = URL.parse(window.location)?.origin || "null";
-    if (HOSTED_VIEWER_ORIGINS.has(viewerOrigin)) {
-      // Hosted or local viewer, allow for any file locations
-      return;
-    }
-    const fileOrigin = URL.parse(file, window.location)?.origin;
-    if (fileOrigin === viewerOrigin) {
-      return;
-    }
-    const ex = new Error("file origin does not match viewer's");
-
-    PDFViewerApplication._documentError("pdfjs-loading-error", {
-      message: ex.message,
-    });
-    // Removing of the following line will not guarantee that the viewer will
-    // start accepting URLs from foreign origin -- CORS headers on the remote
-    // server must be properly configured.
-    throw ex;
+    // const viewerOrigin = URL.parse(window.location)?.origin || "null";
+    // if (HOSTED_VIEWER_ORIGINS.has(viewerOrigin)) {
+    //   // Hosted or local viewer, allow for any file locations
+    //   return;
+    // }
+    // const fileOrigin = URL.parse(file, window.location)?.origin;
+    // if (fileOrigin === viewerOrigin) {
+    //   return;
+    // }
+    // const ex = new Error("file origin does not match viewer's");
+
+    // PDFViewerApplication._documentError("pdfjs-loading-error", {
+    //   message: ex.message,
+    // });
+    // // Removing of the following line will not guarantee that the viewer will
+    // // start accepting URLs from foreign origin -- CORS headers on the remote
+    // // server must be properly configured.
+    // throw ex;
   };
 
   // eslint-disable-next-line no-var
